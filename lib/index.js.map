{"version":3,"sources":["../src/index.js"],"names":["split","runtime","framework","getVirtualEnv","containerEnv","VUE","config","weex","env","platform","WEEX","appVersion","appName","RAX","navigator","UNKNOWN","WEB","virtualEnv"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;4BAE+B,iCAAkBA,KAAlB,CAAwB,GAAxB,C;;IAAvBC,O;IAASC,S;;AAEjB,SAASC,aAAT,GAAwB;AACtB,MAAIC,eAAe,EAAnB;AACA,UAAQF,SAAR;AACE,SAAK,qBAAUG,GAAf;AACI,UAAMC,SAASC,KAAKD,MAApB;AACA,UAAME,OAAMF,OAAOE,GAAnB;AACAJ,mBAAaK,QAAb,GAAwBD,KAAIC,QAA5B;AACA,UAAI,mBAAQC,IAAR,KAAiBT,OAArB,EAA6B;AAC3BG,qBAAaO,UAAb,GAA0BH,KAAIG,UAA9B;AACAP,qBAAaQ,OAAb,GAAuBJ,KAAII,OAA3B;AACD;AACH;AACF,SAAK,qBAAUC,GAAf;AACI,UAAI,mBAAQH,IAAR,KAAiBT,OAArB,EAA8B;AAC5BG,qBAAaK,QAAb,GAAwBK,UAAUL,QAAlC;AACAL,qBAAaQ,OAAb,GAAuBE,UAAUF,OAAjC;AACAR,qBAAaO,UAAb,GAA0BG,UAAUH,UAApC;AACD;AACH;AACF,SAAK,qBAAUI,OAAf;AACI,UAAI,mBAAQC,GAAR,KAAgBf,OAApB,EAA4B;AAC1BG,qBAAaK,QAAb,GAAwB,mBAAQO,GAAhC;AACD;AACD,UAAI,mBAAQD,OAAR,KAAoBd,OAAxB,EAAgC;AAC9BG,qBAAaK,QAAb,GAAwB,mBAAQM,OAAhC;AACD;AACH;AAxBJ;AA0BA,SAAOX,YAAP;AACD;;AAED,IAAMa,aAAad,eAAnB;AACA,IAAMK,MAAM,2BAAYP,OAAZ,EAAoBC,SAApB,EAA8Be,UAA9B,CAAZ;;kBAEeT,G","file":"index.js","sourcesContent":["import whichOneRuntime from './whichOneRuntime.js';\nimport environment from './environment.js';\nimport { RUNTIME, FRAMEWORK } from './constants.js';\n\nconst [ runtime, framework ] = whichOneRuntime().split('.');\n\nfunction getVirtualEnv(){\n  let containerEnv = {};\n  switch (framework){\n    case FRAMEWORK.VUE:\n        const config = weex.config;\n        const env = config.env;\n        containerEnv.platform = env.platform;\n        if (RUNTIME.WEEX === runtime){\n          containerEnv.appVersion = env.appVersion;\n          containerEnv.appName = env.appName;\n        }\n      break;\n    case FRAMEWORK.RAX:\n        if (RUNTIME.WEEX === runtime) {\n          containerEnv.platform = navigator.platform;\n          containerEnv.appName = navigator.appName;\n          containerEnv.appVersion = navigator.appVersion;\n        }\n      break;\n    case FRAMEWORK.UNKNOWN:\n        if (RUNTIME.WEB === runtime){\n          containerEnv.platform = RUNTIME.WEB;\n        }\n        if (RUNTIME.UNKNOWN === runtime){\n          containerEnv.platform = RUNTIME.UNKNOWN;\n        }        \n      break;\n  }  \n  return containerEnv;\n}\n\nconst virtualEnv = getVirtualEnv();\nconst env = environment(runtime,framework,virtualEnv);\n\nexport default env;"]}